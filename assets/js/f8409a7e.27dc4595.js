"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["8147"],{88211:function(t,e,n){n.r(e),n.d(e,{frontMatter:()=>r,default:()=>u,toc:()=>c,metadata:()=>i,assets:()=>l,contentTitle:()=>a});var i=JSON.parse('{"id":"intro","title":"Introduction","description":"The problem","source":"@site/docs/intro.mdx","sourceDirName":".","slug":"/intro","permalink":"/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/atomic-testing/atomic-testing/tree/main/docs/docs/docs/intro.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"intro","title":"Introduction","sidebar_label":"Introduction","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Step-by-Step Tutorial","permalink":"/docs/tutorial"},"next":{"title":"Core Concepts","permalink":"/docs/concepts"}}'),o=n(54381),s=n(91261);let r={id:"intro",title:"Introduction",sidebar_label:"Introduction",sidebar_position:1},a=void 0,l={},c=[{value:"The problem",id:"the-problem",level:2},{value:"The solution",id:"the-solution",level:2}];function d(t){let e={h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"the-problem",children:"The problem"}),"\n",(0,o.jsx)(e.p,{children:"Writing maintainable tests for your UI, built using popular third-party component libraries like Material UI or Bootstrap, can be challenging due to insufficient documentation on establishing communication between tests and these components."}),"\n",(0,o.jsx)(e.p,{children:"Moreover, you want your tests to exclude intricate details about interacting with third-party components, enabling seamless test updates when the components change. This approach enhances the maintainability and adaptability of your test suite."}),"\n",(0,o.jsx)(e.p,{children:"Furthermore, as your application scale, you also want a testing library that can scale with your application. You want to be able to compose reusable test strategies to test more complex components."}),"\n",(0,o.jsx)(e.h2,{id:"the-solution",children:"The solution"}),"\n",(0,o.jsx)(e.p,{children:"Atomic Testing is designed to offer a consistent way to interact with third-party or first-party components across different testing environments, such as DOM testing or end-to-end testing."}),"\n",(0,o.jsx)(e.p,{children:"The core principles of Atomic Testing are:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Reusability"}),": Deliver a standard and reusable method for interacting with components."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Composability"}),": Enable developers to compose reusable test strategies for testing more complex components."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Adaptability"}),": Ensure testing strategies can adapt to various test environments, including DOM testing (React, Vue\xa03, vanilla\xa0JS, Angular) and end-to-end testing (Cypress, Playwright, Selenium/WebDriver)."]}),"\n"]})]})}function u(t={}){let{wrapper:e}={...(0,s.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},91261:function(t,e,n){n.d(e,{Z:()=>a,a:()=>r});var i=n(73749);let o={},s=i.createContext(o);function r(t){let e=i.useContext(s);return i.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),i.createElement(s.Provider,{value:e},t.children)}}}]);