"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[677],{28460:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api/@atomic-testing/dom-core/index","title":"@atomic-testing/dom-core","description":"Utilities for testing plain DOM elements with the Atomic Testing workflow.","source":"@site/docs/api/@atomic-testing/dom-core/index.md","sourceDirName":"api/@atomic-testing/dom-core","slug":"/api/@atomic-testing/dom-core/","permalink":"/docs/api/@atomic-testing/dom-core/","draft":false,"unlisted":false,"editUrl":"https://github.com/atomic-testing/atomic-testing/tree/main/docs/docs/docs/api/@atomic-testing/dom-core/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Variable: defaultWaitForOption","permalink":"/docs/api/@atomic-testing/core/variables/defaultWaitForOption"},"next":{"title":"Class: DOMInteractor","permalink":"/docs/api/@atomic-testing/dom-core/classes/DOMInteractor"}}');var s=n(27968),o=n(89880);const a={},c="@atomic-testing/dom-core",r={},l=[{value:"Installation",id:"installation",level:2},{value:"Classes",id:"classes",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"Functions",id:"functions",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"atomic-testingdom-core",children:"@atomic-testing/dom-core"})}),"\n",(0,s.jsx)(t.p,{children:"Utilities for testing plain DOM elements with the Atomic Testing workflow.\nThis package provides the low-level engine used by browser-based adapters."}),"\n",(0,s.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"pnpm add @atomic-testing/dom-core\n"})}),"\n",(0,s.jsxs)(t.p,{children:["See the ",(0,s.jsx)(t.a,{href:"https://atomic-testing.dev/",children:"documentation"})," for usage examples."]}),"\n",(0,s.jsx)(t.h2,{id:"classes",children:"Classes"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/docs/api/@atomic-testing/dom-core/classes/DOMInteractor",children:"DOMInteractor"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/docs/api/@atomic-testing/dom-core/classes/FakeMouseEvent",children:"FakeMouseEvent"})}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/docs/api/@atomic-testing/dom-core/type-aliases/IDomTestEngineOption",children:"IDomTestEngineOption"})}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/docs/api/@atomic-testing/dom-core/functions/createDomTestEngine",children:"createDomTestEngine"})}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},89880:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var i=n(64700);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);