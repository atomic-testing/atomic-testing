"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7751],{579:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"api/interfaces/atomic_testing_core.MouseMoveOption","title":"Interface: MouseMoveOption","description":"@atomic-testing/core.MouseMoveOption","source":"@site/docs/api/interfaces/atomic_testing_core.MouseMoveOption.md","sourceDirName":"api/interfaces","slug":"/api/interfaces/atomic_testing_core.MouseMoveOption","permalink":"/docs/api/interfaces/atomic_testing_core.MouseMoveOption","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"atomic_testing_core.MouseMoveOption","title":"Interface: MouseMoveOption","sidebar_label":"MouseMoveOption","custom_edit_url":null},"sidebar":"tutorialSidebar","previous":{"title":"MouseLeaveOption","permalink":"/docs/api/interfaces/atomic_testing_core.MouseLeaveOption"},"next":{"title":"MouseOption","permalink":"/docs/api/interfaces/atomic_testing_core.MouseOption"}}');var n=i(9214),s=i(7705);const r={id:"atomic_testing_core.MouseMoveOption",title:"Interface: MouseMoveOption",sidebar_label:"MouseMoveOption",custom_edit_url:null},c=void 0,a={},d=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"position",id:"position",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in",level:4}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/docs/api/modules/atomic_testing_core",children:"@atomic-testing/core"}),".MouseMoveOption"]}),"\n",(0,n.jsx)(t.h2,{id:"hierarchy",children:"Hierarchy"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"/docs/api/interfaces/atomic_testing_core.MouseOption",children:(0,n.jsx)(t.code,{children:"MouseOption"})})}),"\n",(0,n.jsxs)(t.p,{children:["\u21b3 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"MouseMoveOption"})})]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h3,{id:"position",children:"position"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"position"}),": ",(0,n.jsx)(t.a,{href:"/docs/api/interfaces/atomic_testing_core.Point",children:(0,n.jsx)(t.code,{children:"Point"})})]}),"\n",(0,n.jsx)(t.p,{children:"A point to use relative to the top-left corner of element padding box. If not specified, uses some visible point of\nthe element.\nNote that in end to end tests such as Playwright, mouse interaction location is not always pixel perfect."}),"\n",(0,n.jsx)(t.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/docs/api/interfaces/atomic_testing_core.MouseOption",children:"MouseOption"}),".",(0,n.jsx)(t.a,{href:"/docs/api/interfaces/atomic_testing_core.MouseOption#position",children:"position"})]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/atomic-testing/atomic-testing/blob/495658714e956033ae0d7ca46b34508674b2dd3a/packages/core/src/interactor/MouseOption.ts#L9",children:"packages/core/src/interactor/MouseOption.ts:9"})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},7705:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>c});var o=i(8318);const n={},s=o.createContext(n);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);