"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["9647"],{42692:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>i,toc:()=>d,default:()=>u,metadata:()=>r,assets:()=>o,contentTitle:()=>a});var r=JSON.parse('{"id":"api/@atomic-testing/playwright/functions/getTestRunnerInterface","title":"Function: getTestRunnerInterface()","description":"getTestRunnerInterface\\\\(): E2eTestInterface\\\\","source":"@site/docs/api/@atomic-testing/playwright/functions/getTestRunnerInterface.md","sourceDirName":"api/@atomic-testing/playwright/functions","slug":"/api/@atomic-testing/playwright/functions/getTestRunnerInterface","permalink":"/docs/api/@atomic-testing/playwright/functions/getTestRunnerInterface","draft":false,"unlisted":false,"editUrl":"https://github.com/atomic-testing/atomic-testing/tree/main/docs/docs/docs/api/@atomic-testing/playwright/functions/getTestRunnerInterface.md","tags":[],"version":"current","frontMatter":{}}'),s=n(54381),c=n(91261);let i={},a="Function: getTestRunnerInterface()",o={},d=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"T",id:"t",level:3},{value:"Returns",id:"returns",level:2}];function l(e){let t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,c.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"function-gettestrunnerinterface",children:"Function: getTestRunnerInterface()"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"getTestRunnerInterface"}),"<",(0,s.jsx)(t.code,{children:"T"}),">(): ",(0,s.jsx)(t.code,{children:"E2eTestInterface"}),"<",(0,s.jsx)(t.code,{children:"T"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Defined in: ",(0,s.jsx)(t.a,{href:"https://github.com/atomic-testing/atomic-testing/blob/7666e65cf40452c27dc0364d2382b216d71380b9/packages/playwright/src/testRunnerAdapter.ts#L58",children:"testRunnerAdapter.ts:58"})]}),"\n",(0,s.jsx)(t.p,{children:"Get a typed interface for running end-to-end tests with Playwright."}),"\n",(0,s.jsx)(t.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,s.jsx)(t.h3,{id:"t",children:"T"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"T"})," ",(0,s.jsx)(t.em,{children:"extends"})," ",(0,s.jsx)(t.code,{children:"ScenePart"})]}),"\n",(0,s.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"E2eTestInterface"}),"<",(0,s.jsx)(t.code,{children:"T"}),">"]})]})}function u(e={}){let{wrapper:t}={...(0,c.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},91261:function(e,t,n){n.d(t,{Z:()=>a,a:()=>i});var r=n(73749);let s={},c=r.createContext(s);function i(e){let t=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);