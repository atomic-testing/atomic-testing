"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["6433"],{60606:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>c,default:()=>p,toc:()=>d,metadata:()=>o,assets:()=>a,contentTitle:()=>r});var o=JSON.parse('{"id":"api/@atomic-testing/core/interfaces/MouseDownOption","title":"Interface: MouseDownOption","description":"Defined in16","source":"@site/docs/api/@atomic-testing/core/interfaces/MouseDownOption.md","sourceDirName":"api/@atomic-testing/core/interfaces","slug":"/api/@atomic-testing/core/interfaces/MouseDownOption","permalink":"/docs/api/@atomic-testing/core/interfaces/MouseDownOption","draft":false,"unlisted":false,"editUrl":"https://github.com/atomic-testing/atomic-testing/tree/main/docs/docs/docs/api/@atomic-testing/core/interfaces/MouseDownOption.md","tags":[],"version":"current","frontMatter":{}}'),i=n(54381),s=n(91261);let c={},r="Interface: MouseDownOption",a={},d=[{value:"Extends",id:"extends",level:2},{value:"Properties",id:"properties",level:2},{value:"position?",id:"position",level:3},{value:"Inherited from",id:"inherited-from",level:4}];function l(e){let t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"interface-mousedownoption",children:"Interface: MouseDownOption"})}),"\n",(0,i.jsxs)(t.p,{children:["Defined in: ",(0,i.jsx)(t.a,{href:"https://github.com/atomic-testing/atomic-testing/blob/e2bb758c7b919ccd60df5b7f4f773a78bb377f71/packages/core/src/interactor/MouseOption.ts#L16",children:"packages/core/src/interactor/MouseOption.ts:16"})]}),"\n",(0,i.jsx)(t.h2,{id:"extends",children:"Extends"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/api/@atomic-testing/core/interfaces/MouseOption",children:(0,i.jsx)(t.code,{children:"MouseOption"})})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(t.h3,{id:"position",children:"position?"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"optional"})," ",(0,i.jsx)(t.strong,{children:"position"}),": ",(0,i.jsx)(t.a,{href:"/docs/api/@atomic-testing/core/interfaces/Point",children:(0,i.jsx)(t.code,{children:"Point"})})]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Defined in: ",(0,i.jsx)(t.a,{href:"https://github.com/atomic-testing/atomic-testing/blob/e2bb758c7b919ccd60df5b7f4f773a78bb377f71/packages/core/src/interactor/MouseOption.ts#L9",children:"packages/core/src/interactor/MouseOption.ts:9"})]}),"\n",(0,i.jsx)(t.p,{children:"A point to use relative to the top-left corner of element padding box. If not specified, uses some visible point of\nthe element.\nNote that in end to end tests such as Playwright, mouse interaction location is not always pixel perfect."}),"\n",(0,i.jsx)(t.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"/docs/api/@atomic-testing/core/interfaces/MouseOption",children:(0,i.jsx)(t.code,{children:"MouseOption"})}),".",(0,i.jsx)(t.a,{href:"/docs/api/@atomic-testing/core/interfaces/MouseOption#position",children:(0,i.jsx)(t.code,{children:"position"})})]})]})}function p(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},91261:function(e,t,n){n.d(t,{Z:()=>r,a:()=>c});var o=n(73749);let i={},s=o.createContext(i);function c(e){let t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);