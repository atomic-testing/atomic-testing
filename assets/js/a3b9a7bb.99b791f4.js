"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2020],{1834:(e,t,o)=>{o.d(t,{R:()=>c,x:()=>s});var i=o(8318);const n={},a=i.createContext(n);function c(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),i.createElement(a.Provider,{value:t},e.children)}},2637:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"api/@atomic-testing/component-driver-mui-v6/type-aliases/AutoCompleteMatchType","title":"Type Alias: AutoCompleteMatchType","description":"AutoCompleteMatchType = \\"exact\\" \\\\| \\"first-available\\"","source":"@site/docs/api/@atomic-testing/component-driver-mui-v6/type-aliases/AutoCompleteMatchType.md","sourceDirName":"api/@atomic-testing/component-driver-mui-v6/type-aliases","slug":"/api/@atomic-testing/component-driver-mui-v6/type-aliases/AutoCompleteMatchType","permalink":"/docs/api/@atomic-testing/component-driver-mui-v6/type-aliases/AutoCompleteMatchType","draft":false,"unlisted":false,"editUrl":"https://github.com/atomic-testing/atomic-testing/tree/main/docs/docs/docs/api/@atomic-testing/component-driver-mui-v6/type-aliases/AutoCompleteMatchType.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Interface: AutoCompleteDriverSpecificOption","permalink":"/docs/api/@atomic-testing/component-driver-mui-v6/interfaces/AutoCompleteDriverSpecificOption"},"next":{"title":"Variable: MenuItemDisabledErrorId","permalink":"/docs/api/@atomic-testing/component-driver-mui-v6/variables/MenuItemDisabledErrorId"}}');var n=o(9214),a=o(1834);const c={},s="Type Alias: AutoCompleteMatchType",r={},p=[];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"type-alias-autocompletematchtype",children:"Type Alias: AutoCompleteMatchType"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"AutoCompleteMatchType"})," = ",(0,n.jsx)(t.code,{children:'"exact"'})," | ",(0,n.jsx)(t.code,{children:'"first-available"'})]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Defined in: ",(0,n.jsx)(t.a,{href:"https://github.com/atomic-testing/atomic-testing/blob/532781f3b51adaace356e3cbaea69b2c11768227/packages/component-driver-mui-v6/src/components/AutoCompleteDriver.ts#L37",children:"packages/component-driver-mui-v6/src/components/AutoCompleteDriver.ts:37"})]}),"\n",(0,n.jsx)(t.p,{children:"The match type of the autocomplete, default to 'exact'\n'exact': The value must match exactly to one of the options\n'first-available': The value will be set to the first available option"})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);