"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5919],{14318:(t,e,i)=>{i.d(e,{R:()=>c,x:()=>a});var n=i(64700);const r={},o=n.createContext(r);function c(t){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:c(t.components),n.createElement(o.Provider,{value:e},t.children)}},17269:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"api/@atomic-testing/core/namespaces/interactorUtil/functions/interactorWaitUtil","title":"Function: interactorWaitUtil()","description":"interactorWaitUtil(locator, interactor, option): Promise\\\\","source":"@site/docs/api/@atomic-testing/core/namespaces/interactorUtil/functions/interactorWaitUtil.md","sourceDirName":"api/@atomic-testing/core/namespaces/interactorUtil/functions","slug":"/api/@atomic-testing/core/namespaces/interactorUtil/functions/interactorWaitUtil","permalink":"/docs/api/@atomic-testing/core/namespaces/interactorUtil/functions/interactorWaitUtil","draft":false,"unlisted":false,"editUrl":"https://github.com/atomic-testing/atomic-testing/tree/main/docs/docs/docs/api/@atomic-testing/core/namespaces/interactorUtil/functions/interactorWaitUtil.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"interactorUtil","permalink":"/docs/api/@atomic-testing/core/namespaces/interactorUtil/"},"next":{"title":"listHelper","permalink":"/docs/api/@atomic-testing/core/namespaces/listHelper/"}}');var r=i(27968),o=i(14318);const c={},a="Function: interactorWaitUtil()",s={},l=[{value:"Parameters",id:"parameters",level:2},{value:"locator",id:"locator",level:3},{value:"interactor",id:"interactor",level:3},{value:"option",id:"option",level:3},{value:"Returns",id:"returns",level:2}];function d(t){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,o.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"function-interactorwaitutil",children:"Function: interactorWaitUtil()"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"interactorWaitUtil"}),"(",(0,r.jsx)(e.code,{children:"locator"}),", ",(0,r.jsx)(e.code,{children:"interactor"}),", ",(0,r.jsx)(e.code,{children:"option"}),"): ",(0,r.jsx)(e.code,{children:"Promise"}),"<",(0,r.jsx)(e.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["Defined in: ",(0,r.jsx)(e.a,{href:"https://github.com/atomic-testing/atomic-testing/blob/998e693cb6ede35f10e613dbc37fe64e123c3806/packages/core/src/utils/interactorUtil.ts#L12",children:"packages/core/src/utils/interactorUtil.ts:12"})]}),"\n",(0,r.jsx)(e.p,{children:"Wait until the element reaches the desired condition.  By default, it waits until the element is attached to the DOM."}),"\n",(0,r.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(e.h3,{id:"locator",children:"locator"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"/docs/api/@atomic-testing/core/type-aliases/PartLocator",children:(0,r.jsx)(e.code,{children:"PartLocator"})})}),"\n",(0,r.jsx)(e.p,{children:"The locator of the element to wait for"}),"\n",(0,r.jsx)(e.h3,{id:"interactor",children:"interactor"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"/docs/api/@atomic-testing/core/interfaces/Interactor",children:(0,r.jsx)(e.code,{children:"Interactor"})})}),"\n",(0,r.jsx)(e.p,{children:"The interactor to use to wait for the element"}),"\n",(0,r.jsx)(e.h3,{id:"option",children:"option"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"Partial"}),"<",(0,r.jsx)(e.code,{children:"Readonly"}),"<",(0,r.jsx)(e.a,{href:"/docs/api/@atomic-testing/core/interfaces/WaitForOption",children:(0,r.jsx)(e.code,{children:"WaitForOption"})}),">> = ",(0,r.jsx)(e.code,{children:"defaultWaitForOption"})]}),"\n",(0,r.jsx)(e.p,{children:"Optional parameters to customize the wait behavior"}),"\n",(0,r.jsx)(e.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"Promise"}),"<",(0,r.jsx)(e.code,{children:"void"}),">"]})]})}function h(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(d,{...t})}):d(t)}}}]);