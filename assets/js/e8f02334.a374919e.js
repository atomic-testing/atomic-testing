"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4294],{1834:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var s=n(8318);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}},7785:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"api/@atomic-testing/core/namespaces/domUtil/functions/isParent","title":"Function: isParent()","description":"isParent(assumptiveParent, el): boolean","source":"@site/docs/api/@atomic-testing/core/namespaces/domUtil/functions/isParent.md","sourceDirName":"api/@atomic-testing/core/namespaces/domUtil/functions","slug":"/api/@atomic-testing/core/namespaces/domUtil/functions/isParent","permalink":"/docs/api/@atomic-testing/core/namespaces/domUtil/functions/isParent","draft":false,"unlisted":false,"editUrl":"https://github.com/atomic-testing/atomic-testing/tree/main/docs/docs/docs/api/@atomic-testing/core/namespaces/domUtil/functions/isParent.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"domUtil","permalink":"/docs/api/@atomic-testing/core/namespaces/domUtil/"},"next":{"title":"Function: removeAllChildren()","permalink":"/docs/api/@atomic-testing/core/namespaces/domUtil/functions/removeAllChildren"}}');var i=n(9214),r=n(1834);const o={},c="Function: isParent()",a={},l=[{value:"Parameters",id:"parameters",level:2},{value:"assumptiveParent",id:"assumptiveparent",level:3},{value:"el",id:"el",level:3},{value:"Returns",id:"returns",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"function-isparent",children:"Function: isParent()"})}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"isParent"}),"(",(0,i.jsx)(t.code,{children:"assumptiveParent"}),", ",(0,i.jsx)(t.code,{children:"el"}),"): ",(0,i.jsx)(t.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Defined in: ",(0,i.jsx)(t.a,{href:"https://github.com/atomic-testing/atomic-testing/blob/eef0f86872fa3524a5b0191003a99ce2d73188ef/packages/core/src/utils/domUtil.ts#L39",children:"packages/core/src/utils/domUtil.ts:39"})]}),"\n",(0,i.jsx)(t.p,{children:"Return whether assumptiveParent is indeed parent of el"}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(t.h3,{id:"assumptiveparent",children:"assumptiveParent"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"Element"})}),"\n",(0,i.jsx)(t.h3,{id:"el",children:"el"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"Element"})}),"\n",(0,i.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"boolean"})})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);