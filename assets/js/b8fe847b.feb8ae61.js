"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9585],{14318:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(64700);const c={},r=i.createContext(c);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),i.createElement(r.Provider,{value:t},e.children)}},89185:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api/@atomic-testing/react-19/index","title":"@atomic-testing/react-19","description":"Adapter for integrating Atomic Testing with React 19.","source":"@site/docs/api/@atomic-testing/react-19/index.md","sourceDirName":"api/@atomic-testing/react-19","slug":"/api/@atomic-testing/react-19/","permalink":"/docs/api/@atomic-testing/react-19/","draft":false,"unlisted":false,"editUrl":"https://github.com/atomic-testing/atomic-testing/tree/main/docs/docs/docs/api/@atomic-testing/react-19/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Interface: IReactTestEngineOption","permalink":"/docs/api/@atomic-testing/react-18-legacy/interfaces/IReactTestEngineOption"},"next":{"title":"Function: createRenderedTestEngine()","permalink":"/docs/api/@atomic-testing/react-19/functions/createRenderedTestEngine"}}');var c=n(27968),r=n(14318);const a={},s="@atomic-testing/react-19",o={},d=[{value:"Installation",id:"installation",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Functions",id:"functions",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"atomic-testingreact-19",children:"@atomic-testing/react-19"})}),"\n",(0,c.jsxs)(t.p,{children:["Adapter for integrating Atomic Testing with ",(0,c.jsx)(t.a,{href:"https://react.dev",children:"React 19"}),".\nIt maps React components to the core scene part APIs."]}),"\n",(0,c.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-bash",children:"pnpm add @atomic-testing/react-19\n"})}),"\n",(0,c.jsxs)(t.p,{children:["Refer to the ",(0,c.jsx)(t.a,{href:"https://atomic-testing.dev/",children:"React integration guide"})," for examples."]}),"\n",(0,c.jsx)(t.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,c.jsxs)(t.ol,{children:["\n",(0,c.jsxs)(t.li,{children:["\n",(0,c.jsx)(t.p,{children:"Install the core library and basic HTML drivers along with this React adapter:"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-bash",children:"pnpm add @atomic-testing/core @atomic-testing/react-19 @atomic-testing/component-driver-html\n"})}),"\n"]}),"\n",(0,c.jsxs)(t.li,{children:["\n",(0,c.jsxs)(t.p,{children:["Create a small component and assign ",(0,c.jsx)(t.code,{children:"data-testid"})," values to the elements you want to interact with:"]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-tsx",metastring:'title="Counter.tsx"',children:"import { useState } from 'react';\n\nexport function Counter() {\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      <span data-testid='count'>{count}</span>\n      <button data-testid='increment' onClick={() => setCount(c => c + 1)}>\n        Increment\n      </button>\n    </div>\n  );\n}\n"})}),"\n"]}),"\n",(0,c.jsxs)(t.li,{children:["\n",(0,c.jsxs)(t.p,{children:["Define a ",(0,c.jsx)(t.code,{children:"ScenePart"})," describing the count display and button using the HTML drivers:"]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-ts",metastring:'title="counterScenePart.ts"',children:"import { HTMLButtonDriver, HTMLElementDriver } from '@atomic-testing/component-driver-html';\nimport { byDataTestId, ScenePart } from '@atomic-testing/core';\n\nexport const counterScenePart = {\n  count: { locator: byDataTestId('count'), driver: HTMLElementDriver },\n  increment: { locator: byDataTestId('increment'), driver: HTMLButtonDriver },\n} satisfies ScenePart;\n"})}),"\n"]}),"\n",(0,c.jsxs)(t.li,{children:["\n",(0,c.jsxs)(t.p,{children:["Write a test using ",(0,c.jsx)(t.code,{children:"createTestEngine"})," to render the component and interact with it:"]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-ts",metastring:'title="Counter.test.tsx"',children:"import { createTestEngine } from '@atomic-testing/react-19';\n\nimport { Counter } from './Counter';\nimport { counterScenePart } from './counterScenePart';\n\ntest('increments when the button is clicked', async () => {\n  const engine = createTestEngine(<Counter />, counterScenePart);\n\n  expect(await engine.parts.count.getText()).toBe('0');\n  await engine.parts.increment.click();\n  expect(await engine.parts.count.getText()).toBe('1');\n\n  await engine.cleanUp();\n});\n"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(t.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/docs/api/@atomic-testing/react-19/interfaces/IReactTestEngineOption",children:"IReactTestEngineOption"})}),"\n"]}),"\n",(0,c.jsx)(t.h2,{id:"functions",children:"Functions"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/docs/api/@atomic-testing/react-19/functions/createRenderedTestEngine",children:"createRenderedTestEngine"})}),"\n",(0,c.jsx)(t.li,{children:(0,c.jsx)(t.a,{href:"/docs/api/@atomic-testing/react-19/functions/createTestEngine",children:"createTestEngine"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}}}]);