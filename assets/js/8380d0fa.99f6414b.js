"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["1437"],{54996:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>r,default:()=>u,toc:()=>l,metadata:()=>s,assets:()=>c,contentTitle:()=>a});var s=JSON.parse('{"id":"advanced-concepts/atomic-testing-vs-rtl","title":"Atomic Testing vs React Testing Library","description":"Atomic Testing is not a replacement for React Testing Library. It builds on top of RTL to provide reusable component drivers and a TestEngine. This extra layer keeps your tests focused on behavior while remaining portable across environments.","source":"@site/docs/advanced-concepts/atomic-testing-vs-rtl.mdx","sourceDirName":"advanced-concepts","slug":"/advanced-concepts/atomic-testing-vs-rtl","permalink":"/docs/advanced-concepts/atomic-testing-vs-rtl","draft":false,"unlisted":false,"editUrl":"https://github.com/atomic-testing/atomic-testing/tree/main/docs/docs/docs/advanced-concepts/atomic-testing-vs-rtl.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"atomic-testing-vs-rtl","title":"Atomic Testing vs React Testing Library","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/docs/advanced-concepts/architecture"},"next":{"title":"API Documentation","permalink":"/docs/category/api-documentation"}}'),o=n(54381),i=n(91261);let r={id:"atomic-testing-vs-rtl",title:"Atomic Testing vs React Testing Library",sidebar_position:4},a=void 0,c={},l=[{value:"Complementary tools",id:"complementary-tools",level:2},{value:"Why not just use RTL directly?",id:"why-not-just-use-rtl-directly",level:2},{value:"Join the community",id:"join-the-community",level:2}];function d(e){let t={a:"a",code:"code",h2:"h2",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Atomic Testing is not a replacement for ",(0,o.jsx)(t.a,{href:"https://testing-library.com/docs/react-testing-library/intro/",children:"React Testing Library"}),". It builds on top of RTL to provide reusable ",(0,o.jsx)(t.strong,{children:"component drivers"})," and a ",(0,o.jsx)(t.code,{children:"TestEngine"}),". This extra layer keeps your tests focused on behavior while remaining portable across environments."]}),"\n",(0,o.jsx)(t.h2,{id:"complementary-tools",children:"Complementary tools"}),"\n",(0,o.jsx)(t.p,{children:"When running DOM-based tests, Atomic Testing delegates rendering and querying to RTL. The same drivers can also interact with Playwright or other end-to-end frameworks. Because interactions flow through drivers, you can reuse test code whether it runs in Jest or in a full browser."}),"\n",(0,o.jsx)(t.h2,{id:"why-not-just-use-rtl-directly",children:"Why not just use RTL directly?"}),"\n",(0,o.jsx)(t.p,{children:"Using RTL alone works, but larger codebases often repeat low-level queries in many tests. Drivers encapsulate those details and allow you to compose them to build more complex scenarios. This approach keeps tests maintainable and lets you share driver code between unit tests and end-to-end tests."}),"\n",(0,o.jsx)(t.h2,{id:"join-the-community",children:"Join the community"}),"\n",(0,o.jsxs)(t.p,{children:["Atomic Testing welcomes contributions and feedback. Visit the ",(0,o.jsx)(t.a,{href:"https://github.com/atomic-testing/atomic-testing",children:"GitHub repository"})," to report issues or open a pull request."]})]})}function u(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},91261:function(e,t,n){n.d(t,{Z:()=>a,a:()=>r});var s=n(73749);let o={},i=s.createContext(o);function r(e){let t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);