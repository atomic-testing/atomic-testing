"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[206],{7759:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var o=n(5250),i=n(1118);const s={id:"intro",title:"Introduction",sidebar_label:"Introduction",sidebar_position:1},r=void 0,a={id:"intro",title:"Introduction",description:"The problem",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"intro",title:"Introduction",sidebar_label:"Introduction",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Core Concepts",permalink:"/docs/concepts"}},c={},l=[{value:"The problem",id:"the-problem",level:2},{value:"The solution",id:"the-solution",level:2}];function d(t){const e={h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"the-problem",children:"The problem"}),"\n",(0,o.jsx)(e.p,{children:"Writing maintainable tests for your UI, built using popular third-party component libraries like Material UI or Bootstrap, can be challenging due to insufficient documentation on establishing communication between tests and these components."}),"\n",(0,o.jsx)(e.p,{children:"Moreover, you want your tests to exclude intricate details about interacting with third-party components, enabling seamless test updates when the components change. This approach enhances the maintainability and adaptability of your test suite."}),"\n",(0,o.jsx)(e.p,{children:"Furthermore, as your application scale, you also want a testing library that can scale with your application. You want to be able to compose reusable test strategies to test more complex components."}),"\n",(0,o.jsx)(e.h2,{id:"the-solution",children:"The solution"}),"\n",(0,o.jsx)(e.p,{children:"Atomic Testing is designed to offer a consistent way to interact with third-party or first-party components across different testing environments, such as DOM testing or end-to-end testing."}),"\n",(0,o.jsx)(e.p,{children:"The core principles of Atomic Testing are:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Reusability"}),": Deliver a standard and reusable method for interacting with components."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Composability"}),": Enable developers to compose reusable test strategies for testing more complex components."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Adaptability"}),": Ensure testing strategies can adapt to various test environments, including DOM testing (React, Angular, Vue) and end-to-end testing (Cypress, Playwright, Selenium/WebDriver)."]}),"\n"]})]})}function u(t={}){const{wrapper:e}={...(0,i.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},1118:(t,e,n)=>{n.d(e,{Z:()=>a,a:()=>r});var o=n(79);const i={},s=o.createContext(i);function r(t){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),o.createElement(s.Provider,{value:e},t.children)}}}]);