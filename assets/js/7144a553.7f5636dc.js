"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["3414"],{54786:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>r,default:()=>u,toc:()=>l,metadata:()=>o,assets:()=>a,contentTitle:()=>i});var o=JSON.parse('{"id":"cheat-sheets","title":"Cheat Sheets & Troubleshooting","description":"Most of the time, unit tests may fail because of an inco","source":"@site/docs/cheat-sheets.mdx","sourceDirName":".","slug":"/cheat-sheets","permalink":"/docs/cheat-sheets","draft":false,"unlisted":false,"editUrl":"https://github.com/atomic-testing/atomic-testing/tree/main/docs/docs/docs/cheat-sheets.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"cheat-sheets","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Best Practices","permalink":"/docs/best-practices"},"next":{"title":"FAQ","permalink":"/docs/faq"}}'),s=n(54381),c=n(91261);let r={id:"cheat-sheets",sidebar_position:6},i="Cheat Sheets & Troubleshooting",a={},l=[{value:"1. Inspect component HTML",id:"1-inspect-component-html",level:3},{value:"2. Get component runtime CSS selector",id:"2-get-component-runtime-css-selector",level:3}];function h(e){let t={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,c.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"cheat-sheets--troubleshooting",children:"Cheat Sheets & Troubleshooting"})}),"\n",(0,s.jsx)(t.p,{children:"Most of the time, unit tests may fail because of an inco"}),"\n",(0,s.jsx)(t.h3,{id:"1-inspect-component-html",children:"1. Inspect component HTML"}),"\n",(0,s.jsxs)(t.p,{children:["You may use ",(0,s.jsx)(t.code,{children:"innerHTML()"})," to inspect the HTML of a component. This can be useful for debugging or troubleshooting."]}),"\n",(0,s.jsx)(t.p,{children:"Getting the HTML of a component can be useful to get a snapshot of the component's HTML structure and verify if it matches your expectations.\nHowever it can be overwhelming to read the HTML, so use it wisely."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const html = await testEngine.parts.myComponent.innerHTML();\nconsole.log(html);\n"})}),"\n",(0,s.jsx)(t.h3,{id:"2-get-component-runtime-css-selector",children:"2. Get component runtime CSS selector"}),"\n",(0,s.jsxs)(t.p,{children:["You may use ",(0,s.jsx)(t.code,{children:"runtimeCssSelector()"})," to get the runtime CSS selector of a component, and use it to query the DOM for the component in the browser,\nthis is especially useful when you have a Storybook story that renders the component, which allows you to inspect the component visually in the browser."]}),"\n",(0,s.jsxs)(t.p,{children:["Use of ",(0,s.jsx)(t.code,{children:"runtimeCssSelector()"})," is helpful to troubleshoot if the locator setting is correct."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const selector = await testEngine.parts.myComponent.runtimeCssSelector();\nconsole.log(selector);\n\n// You can use the selector to query the DOM for the component in the browser.\ndocument.querySelector(selector);\n"})})]})}function u(e={}){let{wrapper:t}={...(0,c.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},91261:function(e,t,n){n.d(t,{Z:()=>i,a:()=>r});var o=n(73749);let s={},c=o.createContext(s);function r(e){let t=o.useContext(c);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(c.Provider,{value:t},e.children)}}}]);