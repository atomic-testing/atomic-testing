"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["9274"],{33594:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>l,default:()=>h,toc:()=>u,metadata:()=>r,assets:()=>d,contentTitle:()=>c});var r=JSON.parse('{"id":"quick-start","title":"Quick Start","description":"Choose your framework and get testing in 5 minutes:","source":"@site/docs/quick-start.mdx","sourceDirName":".","slug":"/quick-start","permalink":"/docs/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/atomic-testing/atomic-testing/tree/main/docs/docs/docs/quick-start.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"quick-start","title":"Quick Start","sidebar_label":"Quick Start","sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Which Packages?","permalink":"/docs/framework-guide"}}'),i=n(54381),a=n(91261),s=n(42811),o=n(37331);let l={id:"quick-start",title:"Quick Start",sidebar_label:"Quick Start",sidebar_position:1},c="Quick Start",d={},u=[{value:"Installation",id:"installation",level:2},{value:"Your First Test",id:"your-first-test",level:2},{value:"Installation",id:"installation-1",level:2},{value:"Your First Test",id:"your-first-test-1",level:2},{value:"Installation",id:"installation-2",level:2},{value:"Your First Test",id:"your-first-test-2",level:2},{value:"\u2728 The Magic",id:"-the-magic",level:2},{value:"\uD83C\uDFAF What Just Happened?",id:"-what-just-happened",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"\uD83E\uDD14 Questions?",id:"-questions",level:2}];function m(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Choose your framework and get testing in 5 minutes:"})}),"\n",(0,i.jsxs)(o.Z,{children:[(0,i.jsxs)(s.Z,{value:"react",label:"\u269B\uFE0F React",children:[(0,i.jsx)(t.h2,{id:"installation",children:"Installation"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"# For React 19 with MUI v7\npnpm add @atomic-testing/core @atomic-testing/component-driver-html @atomic-testing/react-19 @atomic-testing/component-driver-mui-v7\n\n# For React 18 with MUI v6\npnpm add @atomic-testing/core @atomic-testing/component-driver-html @atomic-testing/react-18 @atomic-testing/component-driver-mui-v6\n\n# For React 17 or earlier with MUI v5\npnpm add @atomic-testing/core @atomic-testing/component-driver-html @atomic-testing/react-legacy @atomic-testing/component-driver-mui-v5\n"})}),(0,i.jsx)(t.h2,{id:"your-first-test",children:"Your First Test"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"import { HTMLComponentDriver } from '@atomic-testing/component-driver-html';\nimport { ButtonDriver } from '@atomic-testing/component-driver-mui-v7';\nimport { byDataTestId } from '@atomic-testing/core';\nimport { createTestEngine } from '@atomic-testing/react-18';\n\n// Component to test\nfunction WelcomeButton({ name }: { name: string }) {\n  const [clicked, setClicked] = useState(false);\n\n  return (\n    <div>\n      <h1 data-testid='greeting'>Hello {name}!</h1>\n      <button data-testid='welcome-btn' onClick={() => setClicked(true)}>\n        {clicked ? 'Welcome!' : 'Click me'}\n      </button>\n    </div>\n  );\n}\n\n// Test setup\nconst welcomeScene = {\n  greeting: { locator: byDataTestId('greeting'), driver: HTMLComponentDriver },\n  button: { locator: byDataTestId('welcome-btn'), driver: ButtonDriver },\n};\n\n// Test\nit('should welcome the user when clicked', async () => {\n  const engine = createTestEngine(<WelcomeButton name='Alice' />, welcomeScene);\n\n  // Check initial state\n  expect(await engine.parts.greeting.getText()).toBe('Hello Alice!');\n  expect(await engine.parts.button.getText()).toBe('Click me');\n\n  // Interact and verify\n  await engine.parts.button.click();\n  expect(await engine.parts.button.getText()).toBe('Welcome!');\n\n  await engine.cleanUp();\n});\n"})})]}),(0,i.jsxs)(s.Z,{value:"vue",label:"\uD83D\uDC9A Vue 3",children:[(0,i.jsx)(t.h2,{id:"installation-1",children:"Installation"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"pnpm add @atomic-testing/vue-3 @atomic-testing/component-driver-html\n"})}),(0,i.jsx)(t.h2,{id:"your-first-test-1",children:"Your First Test"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"import { HTMLButtonDriver, HTMLComponentDriver } from '@atomic-testing/component-driver-html';\nimport { byDataTestId } from '@atomic-testing/core';\nimport { createTestEngine } from '@atomic-testing/vue-3';\nimport { ref } from 'vue';\n\n// Component to test (SFC-like)\nconst WelcomeButton = {\n  props: ['name'],\n  template: `\n    <div>\n      <h1 data-testid=\"greeting\">Hello {{ name }}!</h1>\n      <button \n        data-testid=\"welcome-btn\" \n        @click=\"handleClick\"\n      >\n        {{ clicked ? 'Welcome!' : 'Click me' }}\n      </button>\n    </div>\n  `,\n  setup() {\n    const clicked = ref(false);\n    const handleClick = () => (clicked.value = true);\n    return { clicked, handleClick };\n  },\n};\n\n// Test setup (identical to React!)\nconst welcomeScene = {\n  greeting: { locator: byDataTestId('greeting'), driver: HTMLComponentDriver },\n  button: { locator: byDataTestId('welcome-btn'), driver: HTMLButtonDriver },\n};\n\n// Test (identical to React!)\nit('should welcome the user when clicked', async () => {\n  const engine = createTestEngine(WelcomeButton, welcomeScene);\n\n  // Same test logic as React version \u2728\n  expect(await engine.parts.greeting.getText()).toBe('Hello Alice!');\n  await engine.parts.button.click();\n  expect(await engine.parts.button.getText()).toBe('Welcome!');\n\n  await engine.cleanUp();\n});\n"})})]}),(0,i.jsxs)(s.Z,{value:"playwright",label:"\uD83C\uDFAD Playwright",children:[(0,i.jsx)(t.h2,{id:"installation-2",children:"Installation"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"pnpm add @atomic-testing/playwright @atomic-testing/component-driver-html\n"})}),(0,i.jsx)(t.h2,{id:"your-first-test-2",children:"Your First Test"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"import { HTMLButtonDriver, HTMLComponentDriver } from '@atomic-testing/component-driver-html';\nimport { byDataTestId } from '@atomic-testing/core';\nimport { createTestEngine } from '@atomic-testing/playwright';\nimport { test, expect } from '@playwright/test';\n\n// Same scene definition as React/Vue \u2728\nconst welcomeScene = {\n  greeting: { locator: byDataTestId('greeting'), driver: HTMLComponentDriver },\n  button: { locator: byDataTestId('welcome-btn'), driver: HTMLButtonDriver },\n};\n\ntest('should welcome the user when clicked', async ({ page }) => {\n  // Navigate to your app\n  await page.goto('/welcome');\n\n  // Create test engine with same scene\n  const engine = createTestEngine(page, welcomeScene);\n\n  // Same test logic as React/Vue versions \u2728\n  expect(await engine.parts.greeting.getText()).toBe('Hello Alice!');\n  await engine.parts.button.click();\n  expect(await engine.parts.button.getText()).toBe('Welcome!');\n});\n"})})]})]}),"\n",(0,i.jsx)(t.h2,{id:"-the-magic",children:"\u2728 The Magic"}),"\n",(0,i.jsxs)(t.p,{children:["Notice how the test logic is ",(0,i.jsx)(t.strong,{children:"identical across frameworks"}),":"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Same Scene Definition"}),": ",(0,i.jsx)(t.code,{children:"welcomeScene"})," works everywhere"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Same Test Code"}),": ",(0,i.jsx)(t.code,{children:"engine.parts.button.click()"})," works everywhere"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Same Component Drivers"}),": HTML/MUI drivers work everywhere"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"This means"}),": Learn once, test everywhere. Your testing knowledge transfers completely between frameworks."]}),"\n",(0,i.jsx)(t.h2,{id:"-what-just-happened",children:"\uD83C\uDFAF What Just Happened?"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"ScenePart"}),": Defined which components matter (",(0,i.jsx)(t.code,{children:"greeting"}),", ",(0,i.jsx)(t.code,{children:"button"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Locators"}),": Found components using ",(0,i.jsx)(t.code,{children:"byDataTestId()"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Drivers"}),": Used semantic APIs (",(0,i.jsx)(t.code,{children:"click()"}),", ",(0,i.jsx)(t.code,{children:"getText()"}),") instead of DOM manipulation"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"TestEngine"}),": Orchestrated everything together"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)("div",{className:"card-container",style:{display:"flex",gap:"1rem",marginTop:"2rem"},children:[(0,i.jsxs)("div",{className:"card",children:[(0,i.jsx)("div",{className:"card__header",children:(0,i.jsx)("h3",{children:"\uD83C\uDFD7\uFE0F Build Your First Real Test"})}),(0,i.jsxs)("div",{className:"card__body",children:[(0,i.jsx)("p",{children:"Follow our step-by-step tutorial with a complete login form example."}),(0,i.jsx)("a",{href:"./first-test",className:"button button--primary",children:(0,i.jsx)(t.p,{children:"Start Tutorial \u2192"})})]})]}),(0,i.jsxs)("div",{className:"card",children:[(0,i.jsx)("div",{className:"card__header",children:(0,i.jsx)("h3",{children:"\uD83D\uDCE6 Choose Your Packages"})}),(0,i.jsxs)("div",{className:"card__body",children:[(0,i.jsx)("p",{children:"Not sure which packages you need? We'll help you decide based on your stack."}),(0,i.jsx)("a",{href:"./framework-guide",className:"button button--secondary",children:(0,i.jsx)(t.p,{children:"Package Guide \u2192"})})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"-questions",children:"\uD83E\uDD14 Questions?"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:'"This seems like extra setup..."'})," \u2192 See ",(0,i.jsx)(t.a,{href:"/docs/why-atomic-testing",children:"Why Atomic Testing?"})," for long-term benefits\n",(0,i.jsx)(t.strong,{children:'"How do I test complex forms?"'})," \u2192 Check out the ",(0,i.jsx)(t.a,{href:"/docs/tutorial",children:"Step-by-Step Tutorial"}),"\n",(0,i.jsx)(t.strong,{children:'"What about my existing tests?"'})," \u2192 We're working on a migration guide!"]})]})}function h(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},42811:function(e,t,n){n.d(t,{Z:()=>a});var r=n(54381);n(73749);var i=n(90620);function a(e){let{children:t,hidden:n,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.Z)("tabItem_M0og",a),hidden:n,children:t})}},37331:function(e,t,n){n.d(t,{Z:()=>f});var r=n(54381),i=n(73749),a=n(90620),s=n(57516),o=n(61456),l=n(30320),c=n(41740),d=n(95674),u=n(10591);function m(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){let{value:t,tabValues:n}=e;return n.some(e=>e.value===t)}var p=n(28306);function g(e){let{className:t,block:n,selectedValue:i,selectValue:o,tabValues:l}=e,c=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),u=e=>{let t=e.currentTarget,n=l[c.indexOf(t)].value;n!==i&&(d(t),o(n))},m=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{let n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1]}}t?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},t),children:l.map(e=>{let{value:t,label:n,attributes:s}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:e=>{c.push(e)},onKeyDown:m,onClick:u,...s,className:(0,a.Z)("tabs__item","tabItem_cCOL",s?.className,{"tabs__item--active":i===t}),children:n??t},t)})})}function v(e){let{lazy:t,children:n,selectedValue:s}=e,o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){let e=o.find(e=>e.props.value===s);return e?(0,i.cloneElement)(e,{className:(0,a.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:o.map((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==s}))})}function x(e){let t=function(e){let{defaultValue:t,queryString:n=!1,groupId:r}=e,a=function(e){let{values:t,children:n}=e;return(0,i.useMemo)(()=>{let e=t??m(n).map(e=>{let{props:{value:t,label:n,attributes:r,default:i}}=e;return{value:t,label:n,attributes:r,default:i}}),r=(0,d.lx)(e,(e,t)=>e.value===t.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[t,n])}(e),[s,p]=(0,i.useState)(()=>(function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}let r=n.find(e=>e.default)??n[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:t,tabValues:a})),[g,v]=function(e){let{queryString:t=!1,groupId:n}=e,r=(0,o.k6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c._X)(a),(0,i.useCallback)(e=>{if(!a)return;let t=new URLSearchParams(r.location.search);t.set(a,e),r.replace({...r.location,search:t.toString()})},[a,r])]}({queryString:n,groupId:r}),[x,f]=function(e){let{groupId:t}=e,n=t?`docusaurus.tab.${t}`:null,[r,a]=(0,u.Nk)(n);return[r,(0,i.useCallback)(e=>{n&&a.set(e)},[n,a])]}({groupId:r}),b=(()=>{let e=g??x;return h({value:e,tabValues:a})?e:null})();return(0,l.Z)(()=>{b&&p(b)},[b]),{selectedValue:s,selectValue:(0,i.useCallback)(e=>{if(!h({value:e,tabValues:a}))throw Error(`Can't select invalid tab value=${e}`);p(e),v(e),f(e)},[v,f,a]),tabValues:a}}(e);return(0,r.jsxs)("div",{className:(0,a.Z)("tabs-container","tabList_yaTQ"),children:[(0,r.jsx)(g,{...t,...e}),(0,r.jsx)(v,{...t,...e})]})}function f(e){let t=(0,p.Z)();return(0,r.jsx)(x,{...e,children:m(e.children)},String(t))}},91261:function(e,t,n){n.d(t,{Z:()=>o,a:()=>s});var r=n(73749);let i={},a=r.createContext(i);function s(e){let t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);