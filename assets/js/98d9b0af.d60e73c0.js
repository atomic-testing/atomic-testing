"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3056],{3313:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var n=i(5250),o=i(1118);const r={id:"atomic_testing_core.HoverOption",title:"Interface: HoverOption",sidebar_label:"HoverOption",custom_edit_url:null},s=void 0,c={id:"api/interfaces/atomic_testing_core.HoverOption",title:"Interface: HoverOption",description:"@atomic-testing/core.HoverOption",source:"@site/docs/api/interfaces/atomic_testing_core.HoverOption.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/atomic_testing_core.HoverOption",permalink:"/docs/api/interfaces/atomic_testing_core.HoverOption",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"atomic_testing_core.HoverOption",title:"Interface: HoverOption",sidebar_label:"HoverOption",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"EnterTextOption",permalink:"/docs/api/interfaces/atomic_testing_core.EnterTextOption"},next:{title:"IClickableDriver",permalink:"/docs/api/interfaces/atomic_testing_core.IClickableDriver"}},a={},l=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"position",id:"position",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in",level:4}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/docs/api/modules/atomic_testing_core",children:"@atomic-testing/core"}),".HoverOption"]}),"\n",(0,n.jsx)(t.h2,{id:"hierarchy",children:"Hierarchy"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"/docs/api/interfaces/atomic_testing_core.MouseOption",children:(0,n.jsx)(t.code,{children:"MouseOption"})})}),"\n",(0,n.jsxs)(t.p,{children:["\u21b3 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"HoverOption"})})]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h3,{id:"position",children:"position"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"position"}),": ",(0,n.jsx)(t.a,{href:"/docs/api/interfaces/atomic_testing_core.Point",children:(0,n.jsx)(t.code,{children:"Point"})})]}),"\n",(0,n.jsx)(t.p,{children:"A point to use relative to the top-left corner of element padding box. If not specified, uses some visible point of\nthe element.\nNote that in end to end tests such as Playwright, mouse interaction location is not always pixel perfect."}),"\n",(0,n.jsx)(t.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/docs/api/interfaces/atomic_testing_core.MouseOption",children:"MouseOption"}),".",(0,n.jsx)(t.a,{href:"/docs/api/interfaces/atomic_testing_core.MouseOption#position",children:"position"})]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/atomic-testing/atomic-testing/blob/589e129/packages/core/src/interactor/MouseOption.ts#L9",children:"packages/core/src/interactor/MouseOption.ts:9"})})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1118:(e,t,i)=>{i.d(t,{Z:()=>c,a:()=>s});var n=i(79);const o={},r=n.createContext(o);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);